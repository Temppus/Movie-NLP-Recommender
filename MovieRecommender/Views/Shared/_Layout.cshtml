@using MovieRecommender.Extensions

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <title>@ViewBag.Title</title>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/scripts/semantic")
    @Styles.Render("~/css/semantic")

    <style type="text/css">
        body {
            background-color: #ECECEC;
        }

        .ui.menu .item img.logo {
            margin-right: 1.5em;
        }

        .main.container {
            margin-top: 7em;
        }

        .wireframe {
            margin-top: 2em;
        }

        .ui.footer.segment {
            margin: 5em 0em 0em;
            padding: 5em 0em;
        }
    </style>

    @RenderSection("styles", required: false);

</head>

<body>
    <div class="ui fixed inverted menu">
        <div class="ui container">
            <a class="header item" href="/Home">
                <i class="film icon"></i>
                Movie Recommender
            </a>

            @{
                string experimentClaimDone = User?.Identity?.IsExperimentDone();
                bool isExperimentDone = string.IsNullOrEmpty(experimentClaimDone) || experimentClaimDone == "False" ? false : true;
            }

            @if (isExperimentDone)
            {
                <div class="item">
                    <div class="ui left aligned search">
                        <div class="ui icon input">
                            <input class="prompt" type="text" placeholder="Search movie...">
                            <i class="search icon"></i>
                        </div>
                        <div class="results"></div>
                    </div>
                </div>
            }

            @Html.ActionLink("Home", "Index", "Home", null, htmlAttributes: new { @class = "item" })

            @if (isExperimentDone)
            {
                @Html.ActionLink("Movies", "Browse", "Movie", null, htmlAttributes: new { @class = "item" })
            }

            @if (Request.IsAuthenticated && isExperimentDone)
            {
                @Html.ActionLink("Profile", "Index", "Manage", null, htmlAttributes: new { @class = "item" })
            }

            @Html.Partial("_LoginPartial")
        </div>
    </div>

    <div class="ui main container">
        @RenderBody()
    </div>

    <div class="ui inverted vertical footer segment">
        <div class="ui center aligned container">
            <div class="ui stackable inverted divided grid">
                <div class="three wide column">
                    <h4 class="ui inverted header">Developed by</h4>
                    <div class="ui inverted link list">
                        <a href="#" class="item">Ivan Beňovic</a>
                    </div>
                </div>
                <div class="three wide column">
                    <h4 class="ui inverted header">Powered by</h4>
                    <div class="ui inverted link list">
                        <a href="http://semantic-ui.com" class="item">Semantic UI</a>
                    </div>
                </div>
                <div class="three wide column">
                    <h4 class="ui inverted header">About project</h4>
                    <div class="ui inverted link list">
                        <p>Master's thesis project at <a href="http://www.fiit.stuba.sk" class="item"> FIIT STU</a></p>
                    </div>
                </div>
                <div class="seven wide column">
                    <h4 class="ui inverted header">Overview</h4>
                    <p>Movie recommender system using NLP methods to enrich recommendations from reviews of movies.</p>
                </div>
            </div>

        </div>
    </div>

    @RenderSection("scripts", required: false)

    <script>
        $('.ui.search')
          .search({
              searchDelay: 500,
              maxResults: 8,
              apiSettings: {
                  url: '@HttpContext.Current.Request.Url.GetLeftPart(UriPartial.Authority)/Movie/SearchMoviesLike?title={query}'
              },
              minCharacters: 3,
              onResultsAdd: function (html) {
                  return true;
              }
          });
    </script>

</body>
</html>
