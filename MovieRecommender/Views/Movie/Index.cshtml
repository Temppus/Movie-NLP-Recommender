@model MovieRecommender.Models.MoviePreviewModel
@{
    ViewBag.Title = "Movies";
}

<div class="ui text container">
    @Html.Partial("SearchMoviePartial")
</div>


<div class="ui celled grid" id="resultGrid">

    @foreach (var moviePreview in Model.MoviePreviews)
    {
        <div class="row">
            <!-- Image column -->
            <div class="four wide column">
                <div class="row">
                    <a href="@Url.Action("Details","Movie", new { imdbId = @moviePreview.IMDBId })" name="movieDetailLink">
                        <img alt="Film poster" src="@Url.Content(moviePreview.ImageURI)" name="posterURI" class="ui centered medium image" />
                    </a>
                </div>
                <div class="row">
                    <a href="http://www.imdb.com/title/@moviePreview.IMDBId" target="_blank" name="imdbLink">IMDb link</a>
                </div>
            </div>

            <!-- Film info column -->
            <div class="twelve wide column">
                <div class="ui grid">

                    <!-- Title -->
                    <div class="eight wide column">
                        <div class="row">
                            <div class="ui medium header" name="movieTitle">@moviePreview.Title</div>
                            <div class="ui grid">
                                <div class="twelve wide column">
                                    <div class="ui star rating" data-rating=@Math.Floor(moviePreview.Rating).ToString() name="ratingDecimal">
                                    </div>
                                </div>
                                <div class="two wide column" name="ratingHolder">
                                    @moviePreview.Rating
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Like segment -->
                    <div class="eight wide right aligned column" name="likeContainer">

                        @if (User.Identity.IsAuthenticated)
                        {
                            if (@moviePreview.IsLikedByUser)
                            {
                                <div name="unlikeButton" movieId="@moviePreview.IMDBId"></div>
                            }
                            else
                            {
                                <div name="likeButton" movieId="@moviePreview.IMDBId"></div>
                            }
                        }
                    </div>

                    <!-- Genres -->
                    <div class="sixteen wide column">
                        <div class="row">
                            <div class="ui small header" name="genresHolder">
                                Genres
                                @foreach (string genre in moviePreview.Genres)
                                {
                                    <button class="tiny ui button" name="movieGenre">@genre</button>
                                }
                            </div>

                        </div>
                    </div>

                    <div class="twelve wide column">
                        <!-- Overview -->
                        <div class="row">
                            <div class="wide row">
                                <div class="ui small header">Overview</div>
                                <p name="movieOverview">@moviePreview.Overview</p>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }
</div>

<div class="ui active centered inline loader" id="loaderId"></div>

@Scripts.Render("~/bundles/movielike")

<script>

    $(document).ready(function () {
        $('#loaderId').hide();
        likeDecorator();
    });

    var currentPaginationIndex = 1;

    $('.rating')
      .rating({
          initialRating: 5,
          maxRating: 10,
          interactive: false
      });


    $(window).scroll(function () {
        if ($(window).scrollTop() + $(window).height() > $(document).height() - 100) { // Check if we are near bottom

            var resultGrid = $('#resultGrid');

            if (resultGrid.children().length > 0) {

                $('#loaderId').show();

                var fromYear = $("#SelectedFromYear :selected").text();
                var toYear = $("#SelectedToYear :selected").text();

                var selectedGenres = [];
                $("#SelectedGenres :selected").each(function () {
                    selectedGenres.push($(this).val());
                });

                var selectedRating = $("#SelectedRating :selected").text();

                var searchModelObject = {
                    'SelectedFromYear': fromYear,
                    'SelectedToYear': toYear,
                    'SelectedRating': selectedRating,
                    'SelectedGenres': selectedGenres,
                    'PaginationIndex': currentPaginationIndex++
                };

                searchModelObject = JSON.stringify({ model: searchModelObject });

                $.ajax({
                    type: 'POST',
                    url: '/Movie/PaginationSearch',
                    data: searchModelObject,
                    contentType: 'application/json',
                    error: function (err) {
                        alert("Pagination error.");
                    },
                    success: function (previewMovieArray) {

                        $('#loaderId').hide();

                        var filmDivsArray = [];

                        for (var i = 0; i < previewMovieArray.length; i++) {

                            var movieRowClone = resultGrid.find(">:first-child").clone();

                            var moviePreview = previewMovieArray[i];
                            movieRowClone.find("[name='movieTitle']").html(moviePreview.Title);
                            movieRowClone.find("[name='posterURI']").attr("src", moviePreview.ImageURI);
                            movieRowClone.find("[name='movieDetailLink']").attr("href", "/Movie/Details?imdbId=" + moviePreview.IMDBId);
                            movieRowClone.find("[name='imdbLink']").attr("href", "http://www.imdb.com/title/" + moviePreview.IMDBId);
                            movieRowClone.find("[name='ratingDecimal']").attr("data-rating", Math.floor(moviePreview.Rating));
                            movieRowClone.find("[name='ratingHolder']").html(moviePreview.Rating);

                            // remove cloned genres
                            movieRowClone.find("[name='movieGenre']").each(function () {
                                $(this).remove();
                            });

                            var genreDiv = movieRowClone.find("[name='genresHolder']");

                            // create new ones
                            for (var j = 0; j < moviePreview.Genres.length; j++) {

                                var button = $(document.createElement('button'))
                                            .addClass('tiny ui button')
                                            .text(moviePreview.Genres[j]);

                                genreDiv.append(button);
                            }

                            // remove like container elements
                            var likeContainer = movieRowClone.find("[name='likeContainer']");
                            likeContainer.empty();

                            if ("@User.Identity.IsAuthenticated" == "True")
                            {
                                if (moviePreview.IsLikedByUser)
                                {
                                    var unlikeDiv = $("<div name='unlikeButton' movieId='" + moviePreview.IMDBId + "'></div>");
                                    likeContainer.append(unlikeDiv);
                                }
                                else
                                {
                                    var likeDiv = $("<div name='likeButton' movieId='" + moviePreview.IMDBId + "'></div>");
                                    likeContainer.append(likeDiv);
                                }
                            }

                            // at last thing change overview
                            movieRowClone.find("[name='movieOverview']").html(moviePreview.Overview);

                            filmDivsArray.push(movieRowClone);
                        }

                        // append pagination movies
                        resultGrid.append(filmDivsArray);

                        // run sematic rating again to set appropriate stars
                        $(".rating").rating();

                        // run like decorations
                        likeDecorator();
                    }
                });
            }
        }
    });
</script>










