@model MovieRecommender.Models.MovieDetailModel

@{
    ViewBag.Title = Model.Title;
}

@section styles {
    <style>
        .ui.main.container {
            width: 85%;
        }
    </style>
}

<div class="ui grid" id="resultGrid">
    <div class="row">
        <!-- Image column -->
        <div class="three wide column">
            <div class="row">
                <img alt="Film poster" src="@Url.Content(Model.ImageURI)" id="posterImgId" class="ui centered medium image" />
            </div>
            <div class="row">
                <a href="http://www.imdb.com/title/@Model.IMDBId" target="_blank" id="imdbLinkId">IMDb link</a>
            </div>
        </div>

        <!-- Film info column -->
        <div class="five wide column">
            <div class="ui grid">

                <!-- Title -->
                <div class="eight wide column">
                    <div class="row">
                        <div class="ui medium header" id="titleId">@Model.Title</div>
                        <div class="ui grid">
                            <div class="twelve wide column">
                                <div class="ui star rating" data-rating=@Math.Floor(Model.Rating).ToString() id="ratingId">
                                </div>
                            </div>
                            <div class="two wide column" id="ratingNumberId">
                                @Model.Rating
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Like segment -->
                <div class="eight wide right aligned column" name="likeContainer">

                    @if (User.Identity.IsAuthenticated)
                    {
                        if (Model.IsLikedMovie)
                        {
                            <div name="unlikeButton" movieId="@Model.IMDBId"></div>
                        }
                        else
                        {
                            <div name="likeButton" movieId="@Model.IMDBId"></div>
                        }
                    }
                </div>

                <!-- Director -->
                <div class="sixteen wide column">
                    <div class="row">
                        <div class="ui small header" id="directorDivId">
                            Director
                            <button class="tiny ui button">@Model.Director</button>
                        </div>
                    </div>
                </div>

                <!-- Genres -->
                <div class="sixteen wide column">
                    <div class="row">
                        <div class="ui small header" id="genresDivId">
                            Genres
                            @foreach (string genre in Model.Genres)
                            {
                                <button class="tiny ui button" id="genreId">@genre</button>
                            }
                        </div>

                    </div>
                </div>

                <!-- Overview -->
                <div class="sixteen wide column">
                    <div class="row">
                        <div class="wide row">
                            <div class="ui small header">Overview</div>
                            <p id="overviewId">@Model.Overview</p>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="eight wide column">
            <!-- Embeded trailer video -->
            @if (!string.IsNullOrEmpty(Model.TrailerImageURI))
            {
                string trailerBaseURI = Model.TrailerVideoURI.Split('?').FirstOrDefault();

                if (!string.IsNullOrEmpty(trailerBaseURI))
                {
                    string embededURI = "http://www.imdb.com" + trailerBaseURI + "/imdb/embed?autoplay=false&width=640";

                    <iframe src="@embededURI" width="640" height="360" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" frameborder="no" scrolling="no"></iframe>
                }
            }
        </div>
    </div>
</div>


@if (User.Identity.IsAuthenticated)
{
    <h4 class="ui horizontal divider header">
        <i class="tag icon"></i>
        Recommended movies for you
    </h4>

    <div class="ui six column grid">
        @foreach (var suggestion in Model.MovieSuggestions.Take(6))
        {
            <div class="column">

                <div class="ui card" name="interestContainer">
                    <a class="ui image" href="@Url.Action("Details","Movie", new { imdbId = @suggestion.IMDBId })">
                        <img src="@suggestion.ImageURI">
                    </a>
                    <div class="content">
                        <div class="header">@suggestion.Title</div>
                    </div>
                    <div class="extra">
                        <strong>Rating: @suggestion.Rating</strong>
                        <div class="ui star rating" data-rating="@Math.Floor(@suggestion.Rating).ToString()"></div>
                    </div>

                    <div class="ui two bottom attached buttons" name="likeContainer">
                        <div class="ui grey button" name="interestButton" movieId="@suggestion.IMDBId" isNotInterested="true">
                            <i class="remove icon"></i>
                        </div>
                        <div name="likeButton" movieId="@suggestion.IMDBId" likeText="Like" likedText="Liked"></div>
                    </div>
                </div>

                <div class="ui popup">
                    <div class="header">User Rating</div>
                    <div class="ui star rating" data-rating="3"></div>
                </div>

            </div>
        }
    </div>
}


    @*
        <h4 class="ui horizontal divider header">
            <i class="tag icon"></i>
            Actors
        </h4>


        <div class="ui horizontal segments">

            @foreach (var actor in Model.ActorsInfo)
            {
                <div class="ui center aligned segment">
                    <img class="ui avatar small image centered" src=@actor.ImageURI>
                    <div class="content">
                        <div class="header"><strong>@actor.ActorName</strong></div>
                        <strong>As</strong> @actor.As
                    </div>
                </div>
            }
        </div>
    *@

    <h4 class="ui horizontal divider header">
        <i class="tag icon"></i>
        Top 10 Reviews
    </h4>

    @foreach (var review in Model.Reviews)
    {
        <div class="ui raised segment">
            <div class="ui medium header" id="titleId">@review.Title</div>
            @if (review.Rating >= 0)
            {
                <div class="ui star rating" data-rating=@review.Rating.ToString()>
                </div>
            }
            <div>
                <strong>@review.UsefullnessDescription</strong>
            </div>

            <p>@review.Text</p>
        </div>
    }


    @Scripts.Render("~/bundles/movielike")

    <script>

        $('.rating').rating({
            initialRating: 5,
            maxRating: 10,
            interactive: false
        });

        $(document).ready(function () {

            likeDecorator();
            notInterestedDecorator();
        });

    </script>
