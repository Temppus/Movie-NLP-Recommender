@model MovieRecommender.Models.MovieDetailModel

@{
    ViewBag.Title = Model.Title;
}

<div class="ui grid" id="resultGrid">
    <div class="row">
        <!-- Image column -->
        <div class="four wide column">
            <div class="row">
                <img alt="Film poster" src="@Url.Content(Model.ImageURI)" id="posterImgId" class="ui centered medium image" />
            </div>
            <div class="row">
                <a href="http://www.imdb.com/title/@Model.IMDBId" target="_blank" id="imdbLinkId">IMDb link</a>
            </div>
        </div>

        <!-- Film info column -->
        <div class="twelve wide column">
            <div class="ui grid">

                <!-- Title -->
                <div class="eight wide column">
                    <div class="row">
                        <div class="ui medium header" id="titleId">@Model.Title</div>
                        <div class="ui grid">
                            <div class="twelve wide column">
                                <div class="ui star rating" data-rating=@Math.Floor(Model.Rating).ToString() id="ratingId">
                                </div>
                            </div>
                            <div class="two wide column" id="ratingNumberId">
                                @Model.Rating
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Like segment -->
                <div class="eight wide right aligned column" id="likeDiv">

                    @if (User.Identity.IsAuthenticated)
                    {
                        if (Model.IsLikedMovie)
                        {
                            <div class="ui red button" id="unlikeButton" movieId="@Model.IMDBId">
                                <i class="heart icon"></i> You liked this movie
                            </div>
                        }
                        else
                        {
                            <div class="ui green button" id="likeButton" movieId="@Model.IMDBId">
                                <i class="thumbs outline up icon"></i> Like this movie
                            </div>
                        }
                    }
                </div>

                <!-- Director -->
                <div class="sixteen wide column">
                    <div class="row">
                        <div class="ui small header" id="directorDivId">
                            Director
                            <button class="tiny ui button">@Model.Director</button>
                        </div>
                    </div>
                </div>

                <!-- Genres -->
                <div class="sixteen wide column">
                    <div class="row">
                        <div class="ui small header" id="genresDivId">
                            Genres
                            @foreach (string genre in Model.Genres)
                            {
                                <button class="tiny ui button" id="genreId">@genre</button>
                            }
                        </div>

                    </div>
                </div>

                <!-- Overview -->
                <div class="sixteen wide column">
                    <div class="row">
                        <div class="wide row">
                            <div class="ui small header">Overview</div>
                            <p id="overviewId">@Model.Overview</p>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.TrailerImageURI))
{
    <h4 class="ui horizontal divider header">
        <i class="tag icon"></i>
        Trailer
    </h4>

    <div class="ui grid centered">
        <a href="http://www.imdb.com/@Model.TrailerVideoURI" target="_blank">
            <img alt="Trailer" title="Trailer" src="@Url.Content(Model.TrailerImageURI)" itemprop="image">
        </a>
    </div>
}

<h4 class="ui horizontal divider header">
    <i class="tag icon"></i>
    Actors
</h4>

<div class="ui horizontal segments">

    @foreach (var actor in Model.ActorsInfo)
    {
        <div class="ui center aligned segment">
            <img class="ui avatar small image centered" src=@actor.ImageURI>
            <div class="content">
                <div class="header"><strong>@actor.ActorName</strong></div>
                <strong>As</strong> @actor.As
            </div>
        </div>
    }
</div>

<h4 class="ui horizontal divider header">
    <i class="tag icon"></i>
    Top 10 Reviews
</h4>

@foreach (var review in Model.Reviews)
{
    <div class="ui raised segment">
        <div class="ui medium header" id="titleId">@review.Title</div>
        @if (review.Rating >= 0)
        {
            <div class="ui star rating" data-rating=@review.Rating.ToString()>
            </div>
        }
        <div>
            <strong>@review.UsefullnessDescription</strong>
        </div>

        <p>@review.Text</p>
    </div>
}

<script>

    var debounceDelay = 200;

    $(document).ready(function () {

        var likeFunction = function () {

            var movieId = $("#likeButton").attr("movieId");

            if (movieId == null)
                return;

            var likeObject = {
                'IsLike': true,
                'IMDbId': movieId
            };

            likeObject = JSON.stringify({ model: likeObject });

            $.ajax({
                type: 'POST',
                url: '/Movie/LikeHandler',
                data: likeObject,
                contentType: 'application/json',
                error: function (err) {
                    alert("Error, cannot like movie.");
                },
                success: function (previewMovieArray) {

                    var movieId = $("#likeButton").attr("movieId");
                    var likedButtonStr = "<div class='ui red button' id='unlikeButton' movieId='" + movieId + "'> <i class='heart icon'></i> You liked this movie </div>";
                    var likedButton = $($.parseHTML(likedButtonStr)).click($.debounce(debounceDelay, unlikeFunction));

                    $("#likeButton").detach();
                    $("#likeDiv").append(likedButton);
                }
            });
        };

        $('#likeButton').bind("click", $.debounce(debounceDelay, likeFunction));

        var unlikeFunction = function () {

            var movieId = $("#unlikeButton").attr("movieId");

            if (movieId == null)
                return;

            var unlikeObject = {
                'IsLike': false,
                'IMDbId': movieId
            };

            likeObject = JSON.stringify({ model: unlikeObject });

            $.ajax({
                type: 'POST',
                url: '/Movie/LikeHandler',
                data: likeObject,
                contentType: 'application/json',
                error: function (err) {
                    alert("Error, cannot unlike movie.");
                },
                success: function (previewMovieArray) {

                    var movieId = $("#unlikeButton").attr("movieId");
                    var likeButtonStr = "<div class='ui green button' id='likeButton' movieId='" + movieId + "'> <i class='thumbs outline up icon'></i> Like this movie</div>";
                    var likeButton = $($.parseHTML(likeButtonStr)).click($.debounce(debounceDelay, likeFunction));

                    $("#unlikeButton").detach();
                    $("#likeDiv").append(likeButton);
                }
            });
        };

        $('#unlikeButton').bind("click", $.debounce(debounceDelay, unlikeFunction));

    });

    $('.rating').rating({
        initialRating: 5,
        maxRating: 10,
        interactive: false
    });


</script>
