@model MovieRecommender.Models.MovieDetailModel

@{
    ViewBag.Title = Model.Title;
}

@section styles {
    <style>
        .ui.main.container {
            width: 85%;
        }
    </style>
}

<div class="ui grid" id="resultGrid">
    <div class="row">
        <!-- Image column -->
        <div class="three wide column">
            <div class="row">
                <img alt="Film poster" src="@Url.Content(Model.ImageURI)" class="ui centered medium image" />
            </div>
            <div class="row">
                <a href="http://www.imdb.com/title/@Model.IMDBId" target="_blank">IMDb link</a>
            </div>
        </div>

        <!-- Film info column -->
        <div class="five wide column">
            <div class="ui grid">

                <!-- Title -->
                <div class="eight wide column">
                    <div class="row">
                        <div class="ui medium header" id="title">@Model.Title</div>
                        <div class="ui grid">
                            <div class="twelve wide column">
                                <div class="ui star rating" data-rating=@Math.Floor(Model.Rating).ToString()>
                                </div>
                            </div>
                            <div class="two wide column">
                                @Model.Rating
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Like segment -->
                <div class="eight wide right aligned column" name="likeContainer">

                    @if (Request.IsAuthenticated)
                    {
                        if (Model.IsLikedMovie)
                        {
                            <div name="unlikeButton" movieId="@Model.IMDBId"></div>
                        }
                        else
                        {
                            <div name="likeButton" movieId="@Model.IMDBId"></div>
                        }
                    }
                </div>

                <!-- Director -->
                <div class="sixteen wide column">
                    <div class="row">
                        <div class="ui small header">
                            Director
                            <button class="tiny ui button">@Model.Director</button>
                        </div>
                    </div>
                </div>

                <!-- Genres -->
                <div class="sixteen wide column">
                    <div class="row">
                        <div class="ui small header">
                            Genres
                            @foreach (string genre in Model.Genres)
                            {
                                <button class="tiny ui button" id="genreId">@genre</button>
                            }
                        </div>

                    </div>
                </div>

                <!-- Overview -->
                <div class="sixteen wide column">
                    <div class="row">
                        <div class="wide row">
                            <div class="ui small header">Overview</div>
                            <p>@Model.Overview</p>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="eight wide column">
            <!-- Embedded trailer video -->
            @if (!string.IsNullOrEmpty(Model.TrailerImageURI))
            {
                string trailerBaseURI = Model.TrailerVideoURI.Split('?').FirstOrDefault();

                if (!string.IsNullOrEmpty(trailerBaseURI))
                {
                    string embeddedURI = "http://www.imdb.com" + trailerBaseURI + "/imdb/embed?autoplay=false&width=640";

                    <iframe src="@embeddedURI" width="640" height="360" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" frameborder="no" scrolling="no"></iframe>
                }
            }
            else
            {
                <div class="ui active dimmer" id="dimmerDivId">
                    <div class="ui indeterminate medium text loader" id="trailerLoaderId">Looking for video trailer</div>
                </div>
                <div class="ui embed"></div>
            }
        </div>
    </div>
</div>


@if (Request.IsAuthenticated)
{
    <h4 class="ui horizontal divider header">
        <i class="tag icon"></i>
        Similar movies recommended to you
    </h4>

    <div class="ui six column grid">
        @foreach (var suggestion in Model.MovieSuggestions.Take(6))
        {
            <div class="column">

                @{
                    var tooltipHTML = "<div class=\"ui card\">" +
                                                "<div class=\"content\">" +
                                                    $"<div class=\"header\">{@suggestion.Title}</div>" +
                                                    $" <div class=\"meta\">Directed by: {@suggestion.Director}</div>" +
                                                    "<div class=\"description\">" +
                                                        $"<p>{@suggestion.Overview}</p>" +
                                                    "</div>" +
                                                "</div>" +
                                            "</div>";
                }

                <div class="ui card" name="interestContainer">
                    <a class="ui image" href="@Url.Action("Details","Movie", new { imdbId = @suggestion.IMDBId })">
                        <div class="movietooltip" data-html="@tooltipHTML" data-position="right center">
                            <img src="@suggestion.ImageURI">
                        </div>

                    </a>
                    <div class="content">
                        <div class="header">@suggestion.Title</div>
                    </div>
                    <div class="extra">
                        <strong>Rating: @suggestion.Rating</strong>
                        <div class="ui star rating" data-rating="@Math.Floor(@suggestion.Rating).ToString()"></div>
                    </div>

                    <div class="ui two bottom attached buttons" name="likeContainer">
                        <div class="ui grey button notinterested" name="interestButton" movieId="@suggestion.IMDBId" isNotInterested="true"
                             data-content="This movie will no longer be recommended to you." data-position="bottom center" data-variation="inverted">
                            <i class="remove icon"></i>
                        </div>
                        <div name="likeButton" movieId="@suggestion.IMDBId" likeText="Like" likedText="Liked"></div>
                    </div>
                </div>

                <div class="ui popup">
                    <div class="header">User Rating</div>
                    <div class="ui star rating" data-rating="3"></div>
                </div>

            </div>
        }
    </div>
}



<h4 class="ui horizontal divider header">
    <i class="tag icon"></i>
    Actors
</h4>

<div class="ui horizontal segments">

    @foreach (var actor in Model.ActorsInfo)
    {
        <div class="ui center aligned segment">
            <img class="ui avatar small image centered" src=@actor.ImageURI>
            <div class="content">
                <div class="header"><strong>@actor.ActorName</strong></div>
                <strong>As</strong> @actor.As
            </div>
        </div>
    }
</div>


<h4 class="ui horizontal divider header">
    <i class="tag icon"></i>
    Top 10 Reviews
</h4>

@foreach (var review in Model.Reviews)
{
    <div class="ui raised segment">
        <div class="ui medium header">@review.Title</div>
        @if (review.Rating >= 0)
        {
            <div class="ui star rating" data-rating=@review.Rating.ToString()>
            </div>
        }
        <div>
            <strong>@review.UsefullnessDescription</strong>
        </div>

        <p>@review.Text</p>
    </div>
}


@Scripts.Render("~/bundles/movielike")

<script>

    $('.rating').rating({
        initialRating: 5,
        maxRating: 10,
        interactive: false
    });

    $(document).ready(function () {

        likeDecorator();
        notInterestedDecorator();

        if ($("#dimmerDivId").length > 0) {
            findTrailerFunction();
        }

        $('.ui.embed').embed();

        $('.notinterested')
        .popup({
            inline: true
        });

        $('.movietooltip')
        .popup({
            inline: true
        });

    });


    var findTrailerFunction = function ()
    {
        var movieTitle = $("#title").text();

        var search_url = "https://www.googleapis.com/youtube/v3/search?part=snippet&key=AIzaSyAeSHR4A7hqHaiOZMqYYqknyYQtm9xwh4k&q=";
        search_url += encodeURIComponent(movieTitle + " trailer");

        $.ajax({
            type: 'GET',
            url: search_url,
            contentType: 'application/json',
            error: function (err) {
                $("#trailerLoaderId").text("Youtube API error.");
            },
            success: function (data) {

                var found = false;

                $.each(data.items, function (i, items) {
                    found = true;
                    var videoId = items.id.videoId;

                    $("#dimmerDivId").hide();

                    $('.ui.embed').embed({
                        source: 'youtube',
                        id: videoId
                    });

                    return false;
                });

                if (found == false)
                {
                    $("#trailerLoaderId").text("No trailer found");
                }
            }
        });
    }

</script>
