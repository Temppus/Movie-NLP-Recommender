@model MovieRecommender.Models.HomeRecommendationModel
@{
    ViewBag.Title = "Home Page";
}

@using MovieRecommender.Extensions

@section styles {
    <style>
        .ui.main.container {
            width: 95%;
        }

        .ui.grid.explanation {
            min-height: 90%;
        }
    </style>
}

@section scripts {

    <script src="//d3plus.org/js/d3.js"></script>
    <script src="//d3plus.org/js/d3plus.js"></script>
}

@if (Request.IsAuthenticated)
{
    <h4 class="ui horizontal divider header">
        <i class="tag icon"></i>
        Movies recommended for you
    </h4>

    <div class="ui celled relaxed grid" id="resultGrid">

        @{ int currentId = 0;}

        @foreach (var moviePreview in Model.RecommendedMovies.Take(2))
        {
            currentId++;

            <div class="row" name="filmHolder">
                <!-- Image column -->
                <div class="four wide column">
                    <div class="row">
                        <a href="@Url.Action("Details", "Movie", new { imdbId = @moviePreview.IMDBId })" name="movieDetailLink" target="_blank">>
                            <img alt="Film poster" src="@Url.Content(moviePreview.ImageURI)" name="posterURI" class="ui centered medium image" />
                        </a>
                    </div>
                </div>

                <!-- Film info column -->
                <div class="six wide column">
                    <div class="ui grid">

                        <!-- Title -->
                        <div class="eight wide column">
                            <div class="row">
                                <div class="ui medium header" name="movieTitle">@moviePreview.Title</div>
                                <div class="ui grid">
                                    <div class="twelve wide column">
                                        <div class="ui star rating" data-rating=@Math.Floor(moviePreview.Rating).ToString() name="ratingDecimal">
                                        </div>
                                    </div>
                                    <div class="two wide column" name="ratingHolder">
                                        @moviePreview.Rating
                                    </div>
                                </div>

                                <!-- Rating count -->
                                <div class="row">
                                    <div class="ui four column grid">
                                        <div class="wide row">
                                            <div class="wide column"><strong>Ratings</strong></div>
                                            <div class="wide column"><p>@moviePreview.RatingCount</p></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Genres -->
                        <div class="sixteen wide column">
                            <div class="row">
                                <div class="ui small header" name="genresHolder">
                                    Genres
                                    @foreach (string genre in moviePreview.Genres)
                                    {
                                        <button class="tiny ui button" name="movieGenre">@genre</button>
                                    }
                                </div>

                            </div>
                        </div>

                        <div class="sixteen wide column">
                            <!-- Overview -->
                            <div class="row">
                                <div class="wide row">
                                    <div class="ui small header">Overview</div>
                                    <p name="movieOverview">@moviePreview.Overview</p>
                                </div>
                            </div>
                        </div>

                        <!-- Buttons -->
                        <div class="sixteen wide column">
                            <div class="ui two columne equal width padded grid">
                                <div class="column">
                                    <div class="row">
                                        <h4> Have you seen this movie ? </h4>
                                    </div>

                                    <!-- Seen buttons -->
                                    <div class="row">
                                        <div class="ui buttons">
                                            <button class="ui grey experiment yes button">Yes I have</button>
                                            <div class="or" choiceValue="none" type="saw" movieId="@moviePreview.IMDBId"></div>
                                            <button class="ui grey experiment no button">No I haven't</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="column">
                                    <div class="row">
                                        <h4> Would you watch this movie ? </h4>
                                    </div>

                                    <!-- Would watch button -->
                                    <div class="row">
                                        <div class="ui buttons">
                                            <button class="ui green experiment yes button">Yes I would</button>
                                            <div class="or" choiceValue="none" type="would" movieId="@moviePreview.IMDBId"></div>
                                            <button class="ui red experiment no button">No I wouldn't</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="six wide column">
                        <div class="ui three column grid explanation">
                            <div class="one wide column"></div>
                            <div class="fourteen wide column">
                                <div class="row">
                                    @if (moviePreview.Explanation.IsSentimental)
                                    {
                                        <div class="ui small header">What others are saying about this film :</div>
                                    }
                                    else
                                    {
                                        <div class="ui small header">Main keywords :</div>
                                    }

                                </div>
                                <div class="row">
                                        @{ string vizId = "viz" + @currentId; }

                                        <div id="@vizId" class="treemapDiv">

                                            @foreach (var sh in moviePreview.Explanation.ExplanationHolders.Take(5))
                                            {
                                                <div class="explanationDiv" score="@sh.Score" sentence='@sh.Sentence'></div>
                                            }
                                        </div>


                                </div>
                            </div>
                            <div class="one wide column"></div>
                        </div>
                </div>
            </div>
        }
    </div>

    <div class="ui one column stackable center aligned page grid">
        <div class="column">
            <div class="ui big violet button" id="finish-button">
                <div class="content">Finish</div>
            </div>
        </div>
    </div>

    <div class="ui small modal second coupled" id="instructions">
        <div class="header">
            Inštrukcie (2/3)
        </div>
        <div class="content">
            <div class="description">
                <h3>1. Uvidíte zoznam @Model.RecommendedMovies.Count filmov, ktoré boli pre vás odporučené. </h3>
                <h3>2. Pre každý odporučený film určite, či ste ho už videli alebo nie.</h3>
                <h3>3. Taktiež pre každý film označte, či by ste si ho pozreli podľa zobrazených informácií o ňom !</h3>
            </div>
        </div>
        <div class="actions">
            <div class="ui approve button">
                <i class="checkmark icon"></i>
                OK
            </div>
        </div>
    </div>

    <div class="ui small test modal" id="almostFinish">
        <div class="header">
            Naozaj ukončiť ?
        </div>
        <div class="content">
            <p>V prípade, že chcete skončiť kliknite na tlačidlo finish.</p>
            <p>Ak máte čas a chuť, môžete pokračovať ďalej a ohodnotiť ďalších 15 filmov. Budem veľmi vďačný.</p>
        </div>

        <div class="actions">
            <div class="ui positive button">Finish</div>
            <div class="ui cancel violet button">Next 15 movies</div>
        </div>
    </div>

    <div class="ui small test modal" id="finishModal">
        <div class="header">
            (3/3) Vyplnenie krátkeho dotazníka :)
        </div>
        <div class="content">
            <p>Ako poslednú vec vás poprosím vyplniť jednoduchý dotazník s pár otázkami. Kliknite na link nižšie :</p>
            @{
                string userNameEncoded = HttpUtility.UrlEncode(User.Identity.Name); 
                string url = "https://docs.google.com/forms/d/e/1FAIpQLSeCYn--3o2_ypE5r94f3SnVluXrVvxHOtDJORo0_hW8DBo6eQ/viewform?entry.1042920984=" + userNameEncoded;
            }
            <a href="@url" target="_blank">@url</a>
        </div>

        <div class="actions">
            <div class="ui positive button">OK</div>
        </div>
    </div>
}
else
{
    <div class="ui internally celled grid">
        <div class="row">
            <div class="four wide column">
                @{ string leftPosterURL = "https://images-na.ssl-images-amazon.com/images/M/MV5BMTUyMTE0ODcxNF5BMl5BanBnXkFtZTgwODE4NDQzNTE@._V1_SY1000_CR0,0,687,1000_AL_.jpg"; }
                <img alt="Mad Max: Fury Road Poster" title="Mad Max: Fury Road Poster" src="@leftPosterURL" itemprop="image">
            </div>
            <div class="eight wide column">

                <div class="ui one column centered grid">
                    <div class="row">
                        <h1 class="ui centered header">Priebeh experimentu</h1>
                    </div>
                </div>
                <div class="ui two column grid">
                    <div class="one wide column">
                    </div>
                    <div class="fifteen column">
                        <div class="row">
                            <div class="ui ordered steps">
                                <div class="active step">
                                    <div class="content">
                                        <div class="title">Registrácia</div>
                                        <div class="description">Vytvorte si účet</div>
                                    </div>
                                </div>
                                <div class="active step">
                                    <div class="content">
                                        <div class="title">Prihlásenie</div>
                                        <div class="description">Prihláste sa s vytvoreným účtom</div>
                                    </div>
                                </div>
                                <div class="active step">
                                    <div class="content">
                                        <div class="title">Začnite</div>
                                        <div class="description">Riadte sa daľšími inštrukciami :)</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="four wide column">
                @{ string rightPosterURL = "https://images-na.ssl-images-amazon.com/images/M/MV5BOTJiNDEzOWYtMTVjOC00ZjlmLWE0NGMtZmE1OWVmZDQ2OWJhXkEyXkFqcGdeQXVyNTIzOTk5ODM@._V1_SY1000_SX675_AL_.jpg"; }
                <img alt="Mad Max: Fury Road Poster" title="Mad Max: Fury Road Poster" src="@rightPosterURL" itemprop="image">
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/movielike")

<script>

    $('.ui.button.experiment').click(function () {

        var isOK = true;
        var prevFilmHolder = $(this).parents("div[name='filmHolder']").prev();

        if (prevFilmHolder.length)
        {
            prevFilmHolder.find("div[choiceValue='none']").each(function () {
                alert("You did not answer all informations from previous movie");
                isOK = false;
                return false; // break
            });
        }

        if (isOK == true)
        {
            $(this).siblings('.ui.button.experiment').css("border", "none");
            $(this).css("border", "3px solid black");

            if ($(this).hasClass('yes') == true)
            {
                $(this).siblings("div[class='or']").attr('choiceValue', true);
            }
            else
            {
                $(this).siblings("div[class='or']").attr('choiceValue', false);
            }
        }
    });

    $("#finish-button").click(function () {

        if ($('body').find("div[choiceValue='none']").length > 0)
        {
            alert('Experiment not finished yet. You must finish experiment first!');
            return;
        }

        var likedMovieIds = [];

        var experimentModel = {
            'WatchedIds': [],
            'NotWatchedIds': [],
            'WouldWatchIds': [],
            'WouldNotWatchIds': [],
        };

        $('body').find("div[choiceValue]").each(function () {

            var movieid = $(this).attr('movieId');

            if ($(this).attr('type') == 'saw')
            {
                if ($(this).attr('choiceValue') === 'true')
                {
                    experimentModel.WatchedIds.push(movieid);
                }
                else if ($(this).attr('choiceValue') === 'false')
                {
                    experimentModel.NotWatchedIds.push(movieid);
                }
            }
            else if ($(this).attr('type') == 'would')
            {
                if ($(this).attr('choiceValue') === 'true')
                {
                    experimentModel.WouldWatchIds.push(movieid);
                }
                else if ($(this).attr('choiceValue') === 'false')
                {
                    experimentModel.WouldNotWatchIds.push(movieid);
                }
            }
        });

        var postModel = JSON.stringify({ model: experimentModel });

        $.ajax({
            type: 'POST',
            url: '/Home/ExperimentHandler',
            data: postModel,
            contentType: 'application/json',
            error: function (err) {
                alert("Error while processing final experiment data.");
            },
            success: function (data) {

                $('#almostFinish').modal({
                    closable: false,
                    onApprove: function () { // finish

                        $('#finishModal').modal({
                            closable: false,
                            onApprove: function () {
                                window.location.href = "/Movie/Browse";
                            }
                        }).modal('show');
                    },
                    onDeny: function () { // next 15
                        window.location.href = "/Home/Index";
                    }
                }).modal('show');

            }
        });
    });

    $('.rating').rating({
        initialRating: 5,
        maxRating: 10,
        interactive: false
    });    

    $(document).ready(function () {

        var isExperimentDone = "@User.Identity.IsExperimentDone()";

        if (isExperimentDone !== "True")
        {
            $('#instructions').modal('show');
        }

        $(".treemapDiv").each(function (index, element) {

            var dataArray = [];

            $(this).children(".explanationDiv").each(function (index, element) {
                var obj = {
                    "name": $(element).attr('sentence'),
                    "value": parseInt(($(element).attr('score')))
                };
                dataArray.push(obj);
            });

            var colorAttributes = [];

            // http://colorsafe.co
            for (var i = 0; i < dataArray.length; i++) {
                var obj = { "name": dataArray[i].name };

                switch (i) {
                    case 0:
                        obj.hex = "#1c2a43";
                        break;
                    case 1:
                        obj.hex = "#16405b";
                        break;
                    case 2:
                        obj.hex = "#3a539b";
                        break;
                    case 3:
                        obj.hex = "#008080";
                        break;
                    case 4:
                        obj.hex = "#4183d7";
                        break;
                }

                colorAttributes.push(obj);
            }

            var modalDiv = $('.ui.modal').first();

            // https://github.com/alexandersimoes/d3plus/wiki/Visualizations

            var visualization = d3plus.viz()
                .container("#" + $(this).attr('id'))  // container DIV to hold the visualization
                .data(dataArray)  // data to use with the visualization
                .type("tree_map")   // visualization type
                .id("name")         // key for which our data is unique on
                .size("value")      // sizing of blocks
                .attrs(colorAttributes)
                .color("hex")
                .labels({ "resize": false, "font": { "size": 20 } })
                .legend({ "value": false })
                .draw();             // finally, draw the visualization!*/
        });


    });
</script>